train.model = @ResNet()

ResNet.config_intro = {
    'n_filters' : 32
}
ResNet.config_feature_extractor = {
    # Spatial size : 28 -> 14 -> 14 -> 7
    'n_filters' : (
        (16, 16, 32),
        (32, 32, 128),
        (64, 64, 256),
        (128, 128, 512)
    ),
    'n_layers' : (4, 4, 4, 4),
    'increase_dim': (False, True, True, True),
    'down_sample': (False, True, False, True),
    'act': @tf.nn.relu
}
ResNet.config_classifier = {
    'n_filters': (),
    'act': @tf.nn.relu,
    'dropout_rate': 0.5,
    'n_classes': 10
}

train.optimizer = @tf.keras.optimizers.Adam()
tf.keras.optimizers.Adam.learning_rate = 1e-5
train.loss_fn = @tf.keras.losses.SparseCategoricalCrossentropy()
tf.keras.losses.SparseCategoricalCrossentropy.from_logits = True
train.metrics = [@tf.keras.metrics.SparseCategoricalAccuracy()]

train.batch_size = 256
train.epochs = 100
train.patience = 10

train.save_path = './logs'
